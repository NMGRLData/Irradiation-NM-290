do run
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=213.652928, duration=0.000195980072021
script duration name:unknown120_60 seconds:214.0
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.19345092773e-05
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.79357147217e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.89437103271e-05
executed snippet estimated_duration=0.0, duration=0.0023090839386
script duration name:co2 seconds:0.0
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000141859054565
executed snippet estimated_duration=4.0, duration=0.0011088848114
Script duration 214.0
Run total estimated duration= 215.000
run duration: 0:03:35
doing event level: 2
20:04:28 -- Setting default integration. t=1.048576
setting integration time = 1.048576
SetIntegrationTime 1.048576 ===>> OK
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
close session 4961564720
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
adding default conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Start automated run 65626-04F
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
%%%%%%%%%%%%%%%%%% setting automated run 65626-04F
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
20:04:28 -- ******* Pre Extraction Check *******
Get a measurement from the spectrometer
Pre Extraction Termination data. keys=H2,H1,AX,L1,L2,CDD, signals=-0.13084,0.15903,-0.08978,-0.00162,0.08715,0.00256
20:04:28 -- testing system defined conditionals
Checking default pre extraction terminations n=2
testing CDD
evaluate ot="CDD.inactive" t="CDD", ctx="{'CDD': False}"
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
20:04:28 -- ******* Pre Extraction Check Passed *******
=================================================================================
20:04:28 -- stopping status monitor
stop 4949378064
Status monitor stopped
20:04:30 -- starting status monitor
start 4949378064
StatusMonitor period=1. Frequencies(state=2, checksum=3, lock=5, owner=5)
set states for children of V. state=True
handle state [('V', True)]
update switch state V True args=() kw={'refresh': False} ncanvase=6
refresh_canvas_needed fired
start extraction
do extraction
Analysis started at 20:04:31.698529
Extraction Started jan_co2.py
20:04:31 -- ******* Extraction Started jan_co2.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.RemotePyScriptRunner object at 0x129fa2890>
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.6968460083e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.08374786377e-05
executed snippet estimated_duration=100.0, duration=0.00229907035828
Jan CO2 laser analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=3.81469726562e-05
Waiting for CO2 access
wait ('FelixCO2Flag', 0) {}
waiting for FelixCO2Flag = 0
Read FelixCO2Flag ===>> 0
finished waiting
CO2 free
wait ('CO2PumpTimeFlag', 0) {}
waiting for CO2PumpTimeFlag = 0
Read CO2PumpTimeFlag ===>> 0
finished waiting
acquire ('JanCO2Flag',) {'clear': True}
acquire JanCO2Flag
Set JanCO2Flag 1 ===>> OK
JanCO2Flag acquired
set extraction state False (0.75, 'red', 1.5)
CO2 acquired
executed snippet estimated_duration=0, duration=0.0330319404602
WaitForCO2Access.py completed successfully
gosub finished
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.58442687988e-05
Prepare for CO2 analysis
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=6
20:04:32 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Jan Ion Pump'}
open name=--- desc=Jan Ion Pump
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=6
20:04:32 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open None (Jan Ion Pump) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'Microbone to Minibone'}
close name=--- desc=Microbone to Minibone
checking ownership. requestor=129.138.12.150
check software interlocks L
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close L ===>> OK
GetIndicatorState L ===>> False
change switch state (True, True)
update switch state L False args=() kw={} ncanvase=6
20:04:33 -- CLOSE  VALVE-L (Microbone to Minibone)
-------------------------- close None (Microbone to Minibone) result=[(True, True)]
action=close, ok=True, locked=[False]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=6
20:04:33 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=6
20:04:34 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=6
20:04:35 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=6
20:04:35 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
close () {'description': 'CO2 Laser to Felix'}
close name=--- desc=CO2 Laser to Felix
checking ownership. requestor=129.138.12.150
check software interlocks F
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-F(CO2 Laser to Felix) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Felix) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
GetIndicatorState A ===>> OK
change switch state (True, True)
update switch state A True args=() kw={} ncanvase=6
20:04:35 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open T ===>> OK
GetIndicatorState T ===>> OK
change switch state (True, True)
update switch state T True args=() kw={} ncanvase=6
20:04:36 -- OPEN   VALVE-T (Microbone to CO2 Laser)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=5.18487906456
PrepareForCO2Analysis.py completed successfully
gosub finished
set_motor ('beam', '1.0') {}
setting motor "beam" to 1.0
set motor beam to 1.0
SetMotor beam,1.0 ===>> OK
GetMotorMoving beam ===>> False
GetMotorMoving beam ===>> False
Block completed
move_to_position ('176',) {'autocenter': True}
FusionsCO2 move to position 176
sending GoToHole 176,True
GoToHole 176,True ===>> OK
GetDriveMoving ===>> False
GetDriveMoving ===>> False
Block completed
GetAutoCorrecting ===>> OK
GetAutoCorrecting ===>> OK
GetAutoCorrecting ===>> OK
GetAutoCorrecting ===>> False
GetAutoCorrecting ===>> False
Block completed
update position
GetPosition ===>> 0.00000,-7.97560,1.00000
got position (0.0, -7.9756, 1.0)
move to position succeeded
sleep (5,) {}
SLEEP 5.0
block started
WaitControl setup for 5.0  
State checksums do not match. Local:-1404555142 Remote:-333965986
State checksum failed
set states for children of Q. state=False
handle state [('Q', False)]
update switch state Q False args=() kw={'refresh': False} ncanvase=6
refresh_canvas_needed fired
set states for children of B. state=False
set states for children of D. state=False
set states for children of I. state=True
handle state [('B', False), ('D', False), ('I', True)]
update switch state B False args=() kw={'refresh': True} ncanvase=6
update switch state D False args=() kw={'refresh': True} ncanvase=6
update switch state I True args=() kw={'refresh': False} ncanvase=6
refresh_canvas_needed fired
Join finished
block finished. duration 5.04549503326
close () {'description': 'Microbone to Turbo'}
close name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close U ===>> OK
GetIndicatorState U ===>> False
change switch state (True, True)
update switch state U False args=() kw={} ncanvase=6
20:04:46 -- CLOSE  VALVE-U (Microbone to Turbo)
-------------------------- close None (Microbone to Turbo) result=[(True, True)]
action=close, ok=True, locked=[False]
enable laser
enable () {}
set extraction state FusionsCO2 Enabled (False, 'red', 1.5)
enabling laser
Enable ===>> OK
begin interval
BEGIN INTERVAL Interval 1 waiting for 30.0
block started
set extract to 0.85
WaitControl setup for 30.0  
extract (0.85,) {}
GetPosition ===>> 0.00000,-7.97560,1.00000
set extraction state FusionsCO2 ON! 0.85(watts) (0.75, 'red', 1.5)
extract sample to 0.85 (watts)
set laser output
SetLaserOutput 0.85,watts ===>> OK
executing pattern triangle.lp
execute_pattern ('triangle.lp',) {}
executing pattern triangle.lp
State checksums do not match. Local:-1274627911 Remote:-560647230
State checksum failed
IsPatterning ===>> OK
set states for children of Y. state=True
handle state [('Y', True)]
update switch state Y True args=() kw={'refresh': False} ncanvase=6
refresh_canvas_needed fired
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
set states for children of Y. state=False
handle state [('Y', False)]
update switch state Y False args=() kw={'refresh': False} ncanvase=6
refresh_canvas_needed fired
IsPatterning ===>> OK
IsPatterning ===>> OK
set states for children of Z. state=True
handle state [('Z', True)]
update switch state Z True args=() kw={'refresh': False} ncanvase=6
refresh_canvas_needed fired
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> OK
IsPatterning ===>> False
IsPatterning ===>> False
Block completed
COMPLETE INTERVAL waiting for Interval 1 to complete
Join finished
block finished. duration 30.1129090786
Interval 1 finished
end_extract () {}
ending extraction. set laser power to 0
set laser power 0
SetLaserPower 0 ===>> OK
disable () {}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% disable
set extraction state False (0.75, 'red', 1.5)
disabling laser
Disable ===>> OK
sleep (30.0,) {}
SLEEP 30.0
block started
WaitControl setup for 30.0  
set states for children of C. state=False
set states for children of Z. state=False
handle state [('C', False), ('Z', False)]
update switch state C False args=() kw={'refresh': True} ncanvase=6
update switch state Z False args=() kw={'refresh': False} ncanvase=6
refresh_canvas_needed fired
set states for children of P. state=False
handle state [('P', False)]
update switch state P False args=() kw={'refresh': False} ncanvase=6
refresh_canvas_needed fired
set states for children of Y. state=True
handle state [('Y', True)]
update switch state Y True args=() kw={'refresh': False} ncanvase=6
refresh_canvas_needed fired
set states for children of Y. state=False
handle state [('Y', False)]
update switch state Y False args=() kw={'refresh': False} ncanvase=6
refresh_canvas_needed fired
set states for children of Z. state=True
handle state [('Z', True)]
update switch state Z True args=() kw={'refresh': False} ncanvase=6
refresh_canvas_needed fired
Join finished
block finished. duration 30.090941906
executed snippet estimated_duration=166.0, duration=76.1958589554
jan_co2.py completed successfully
GetAchievedOutput ===>> No Response
Requested Output= 0.000
Achieved Output=  0.000
GetResponseBlob ===>> No Response
GetOutputBlob ===>> No Response
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 176
Extraction Finished
20:05:48 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
20:05:48 -- Sending spectrometer configuration
======== Sending configuration ========
SetDeflection CDD,50.0 ===>> OK
SetDeflection H2,0.0 ===>> OK
SetDeflection H1,0.0 ===>> OK
SetDeflection L2,825.0 ===>> OK
SetDeflection L1,400.0 ===>> OK
SetDeflection AX,190.0 ===>> OK
SetZFocus 74.64 ===>> OK
SetZSymmetry -50.72 ===>> OK
SetExtractionLens 26.13 ===>> OK
SetIonRepeller -3.81 ===>> OK
SetElectronEnergy 75.08 ===>> OK
SetYSymmetry -2.81 ===>> OK
SetIonCounterVoltage 1590.0 ===>> OK
send trap current 200.0
GetParameter Trap Current Readback ===>> 198.147042666178
SetParameter Trap Current Set,200.0 ===>> OK
updating mftable name mftable
Using mftable located at /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
============ MFtable ===========
Isotope  H2     H1     AX     L1     L2     CDD    
Ar40     5.8250 5.8787 5.9917 6.1649 6.2303 6.3932
Ar39     5.7243 5.7709 5.8841 6.0510 6.1155 6.2797
Ar36     5.4018 5.4399 5.5475 5.7099 5.7704 5.9308
================================
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
======== Configuration Finished ========
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetParameter Trap Current Readback ===>> 198.258926936459
GetHighVoltage ===>> 4500
start measurement
do measurement
L#=65626 analysis type=unknown
Measurement Started jan_unknown120_60.py
20:05:48 -- ******* Measurement Started jan_unknown120_60.py *******
state changed from extraction to measurement
setting trap, emission, spec, defl, and gains
GetExtractionLens ===>> 26.13
GetYSymmetry ===>> -2.81
GetZSymmetry ===>> -50.72
GetZFocus ===>> 74.64
GetDeflection H2 ===>> 0
GetDeflection H1 ===>> 0
GetDeflection AX ===>> 190
GetDeflection L1 ===>> 400
GetDeflection L2 ===>> 825
GetDeflection CDD ===>> 50
GetGain H2 ===>> 0.0113
GetGain H1 ===>> 0.1
GetGain AX ===>> 0.09675
GetGain L1 ===>> 0.010355
GetGain L2 ===>> 0.095649
GetGain CDD ===>> 0
GetParameter Trap Current Readback ===>> 198.258926936459
GetParameter Source Current Readback ===>> 554.482939632546
pre measurement save
New frame /Users/jan/PychronDev/data/isotopes/25/52da3b-4ad9-4f5b-bc43-294f68c13807.h5
flush and close file /Users/jan/PychronDev/data/isotopes/25/52da3b-4ad9-4f5b-bc43-294f68c13807.h5
testing...
no interpolation path defined
executed snippet estimated_duration=226.132928, duration=0.000181913375854
unknown measurement script
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2', 'CDD') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
clear isotope group
setting isotope det=H2, iso=Ar41
setting isotope det=H1, iso=Ar40
setting isotope det=AX, iso=Ar39
setting isotope det=L1, iso=Ar38
setting isotope det=L2, iso=Ar37
setting isotope det=CDD, iso=Ar36
setting previous blanks
 - setting Ar41 blank 0.018+/-0.007
 - setting Ar40 blank 0.889+/-0.009
 - setting Ar36 blank 0.00791+/-0.00024
 - setting Ar37 blank 0.071+/-0.005
 - setting Ar38 blank 0.0127+/-0.0023
 - setting Ar39 blank 0.013+/-0.009
load analysis view
position_magnet ('Ar40',) {'detector': 'H1'}
detector Detector(H1)
POSITION Ar40 H1
setting detector H2 to Ar41 (40.9624)
setting detector H1 to Ar40 (39.9624)
setting detector AX to Ar39 (38.9624)
setting detector L1 to Ar38 (37.9624)
setting detector L2 to Ar37 (36.9624)
setting detector CDD to Ar36 (35.9624)
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [-0.00063987  0.15840543  0.57026999]
H1 map mass to dac 39.9624 >> 5.87866
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4500
positioning Ar40 (5.87866) on H1
setting magnet DAC
current  : 5.878660
requested: 5.878660
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87866 ===>> OK
set_dac. change=False
equilibrate () {'delay': 3, 'inlet': 'R', 'outlet': 'O', 'eqtime': 12.0}
Equilibration Started
20:05:48 -- ******* Equilibration Started *******
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close O ===>> OK
GetIndicatorState O ===>> False
change switch state (True, True)
update switch state O False args=() kw={} ncanvase=6
20:05:48 -- CLOSE  VALVE-O (Jan Ion Pump)
waiting 3s before opening inlet value ('R',)
update labels <pychron.experiment.plot_panel.PlotPanel object at 0x14bef43b0>
update labels "<pychron.graph.stacked_regression_graph.StackedRegressionGraph object at 0x14909f170>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
update labels "<pychron.graph.stacked_graph.StackedGraph object at 0x14779acb0>"
setting label 0 H2 Ar41
setting label 1 H1 Ar40
setting label 2 AX Ar39
setting label 3 L1 Ar38
setting label 4 L2 Ar37
setting label 5 CDD Ar36
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open R ===>> OK
GetIndicatorState R ===>> OK
change switch state (True, True)
update switch state R True args=() kw={} ncanvase=6
20:05:52 -- OPEN   VALVE-R (Jan Inlet)
equilibrating for 12.0sec
set_time_zero () {}
sniff (12.0,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /sniff/Ar41 (Group) '' table H2
add group /sniff/Ar40 (Group) '' table H1
add group /sniff/Ar39 (Group) '' table AX
add group /sniff/Ar38 (Group) '' table L1
add group /sniff/Ar37 (Group) '' table L2
add group /sniff/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/25/52da3b-4ad9-4f5b-bc43-294f68c13807.h5
measuring sniff. ncounts=12.0
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
set states for children of Z. state=False
handle state [('Z', False)]
update switch state Z False args=() kw={'refresh': False} ncanvase=6
refresh_canvas_needed fired
Equilibration Finished
20:06:04 -- ******* Equilibration Finished *******
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close R ===>> OK
set states for children of R. state=False
set states for children of Y. state=True
handle state [('R', False), ('Y', True)]
update switch state R False args=() kw={'refresh': True} ncanvase=6
update switch state Y True args=() kw={'refresh': False} ncanvase=6
refresh_canvas_needed fired
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=6
20:06:05 -- CLOSE  VALVE-R (Jan Inlet)
Post Equilibration Started jan_pump_extraction_line.py
20:06:05 -- ******* Post Equilibration Started jan_pump_extraction_line.py *******
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000209093093872
executed snippet estimated_duration=4.0, duration=0.0271239280701
Pump after analysis
doing GOSUB
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.0001380443573
Pump Microbone
close () {'description': 'Jan Inlet'}
close name=--- desc=Jan Inlet
checking ownership. requestor=129.138.12.150
check software interlocks R
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
Close R ===>> OK
waiting for write to finish
measurement finished
estimated time: 12.583 actual time: :12.667
flush and close file /Users/jan/PychronDev/data/isotopes/25/52da3b-4ad9-4f5b-bc43-294f68c13807.h5
set_fits () {}
GetIndicatorState R ===>> False
change switch state (True, True)
update switch state R False args=() kw={} ncanvase=6
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal_linear.yaml
set "Ar41" to "('Average', 'SEM')"
set "Ar40" to "('Linear', 'SEM')"
set "Ar36" to "('Linear', 'SEM')"
set "Ar37" to "('linear', 'SEM')"
set "Ar38" to "('linear', 'SEM')"
set "Ar39" to "('Linear', 'SEM')"
set_baseline_fits () {}
using default fits file=/Users/jan/PychronDev/scripts/measurement/fits/nominal_linear.yaml
20:06:05 -- CLOSE  VALVE-R (Jan Inlet)
-------------------------- close None (Jan Inlet) result=[(True, True)]
set "H2" to "('average', 'SEM')"
set "H1" to "('average', 'SEM')"
set "CDD" to "('average', 'SEM')"
set "L2" to "('average', 'SEM')"
set "L1" to "('average', 'SEM')"
set "AX" to "('average', 'SEM')"
multicollect () {'integration_time': 1, 'ncounts': 120}
build tables- signal [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group /signal/Ar41 (Group) '' table H2
add group /signal/Ar40 (Group) '' table H1
add group /signal/Ar39 (Group) '' table AX
add group /signal/Ar38 (Group) '' table L1
add group /signal/Ar37 (Group) '' table L2
add group /signal/Ar36 (Group) '' table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/25/52da3b-4ad9-4f5b-bc43-294f68c13807.h5
measuring signal. ncounts=120
"signal" increment series count="2" fit count="1" regressing="True"
action=close, ok=True, locked=[False]
is_closed ('F',) {}
is F () closed?
is closed True
open () {'description': 'CO2 Laser to Jan'}
open name=--- desc=CO2 Laser to Jan
checking ownership. requestor=129.138.12.150
check software interlocks A
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open A ===>> OK
GetIndicatorState A ===>> OK
change switch state (True, True)
update switch state A True args=() kw={} ncanvase=6
20:06:06 -- OPEN   VALVE-A (CO2 Laser to Jan)
-------------------------- open None (CO2 Laser to Jan) result=[(True, True)]
starting measurement
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
close () {'description': 'CO2 Laser to Roughing'}
close name=--- desc=CO2 Laser to Roughing
checking ownership. requestor=129.138.12.150
check software interlocks G
interlocks []
actuate state mode=None-script, software_lock=True
VALVE-G(CO2 Laser to Roughing) software locked
change switch state (True, False)
-------------------------- close None (CO2 Laser to Roughing) result=[(True, False)]
action=close, ok=True, locked=[True]
open () {'description': 'Microbone to Turbo'}
open name=--- desc=Microbone to Turbo
checking ownership. requestor=129.138.12.150
check software interlocks U
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open U ===>> OK
GetIndicatorState U ===>> OK
change switch state (True, True)
update switch state U True args=() kw={} ncanvase=6
20:06:07 -- OPEN   VALVE-U (Microbone to Turbo)
-------------------------- open None (Microbone to Turbo) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter NP-10'}
open name=--- desc=Microbone to Getter NP-10
checking ownership. requestor=129.138.12.150
check software interlocks M
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open M ===>> OK
GetIndicatorState M ===>> OK
change switch state (True, True)
update switch state M True args=() kw={} ncanvase=6
20:06:08 -- OPEN   VALVE-M (Microbone to Getter NP-10)
-------------------------- open None (Microbone to Getter NP-10) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Getter D-50'}
open name=--- desc=Microbone to Getter D-50
checking ownership. requestor=129.138.12.150
check software interlocks K
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open K ===>> OK
GetIndicatorState K ===>> OK
change switch state (True, True)
update switch state K True args=() kw={} ncanvase=6
20:06:08 -- OPEN   VALVE-K (Microbone to Getter D-50)
-------------------------- open None (Microbone to Getter D-50) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to CO2 Laser'}
open name=--- desc=Microbone to CO2 Laser
checking ownership. requestor=129.138.12.150
check software interlocks T
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open T ===>> OK
GetIndicatorState T ===>> OK
change switch state (True, True)
update switch state T True args=() kw={} ncanvase=6
20:06:09 -- OPEN   VALVE-T (Microbone to CO2 Laser)
-------------------------- open None (Microbone to CO2 Laser) result=[(True, True)]
action=open, ok=True, locked=[False]
open () {'description': 'Microbone to Inlet Pipette'}
open name=--- desc=Microbone to Inlet Pipette
checking ownership. requestor=129.138.12.150
check software interlocks S
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open S ===>> OK
GetIndicatorState S ===>> OK
change switch state (True, True)
update switch state S True args=() kw={} ncanvase=6
20:06:10 -- OPEN   VALVE-S (Microbone to Inlet Pipette)
-------------------------- open None (Microbone to Inlet Pipette) result=[(True, True)]
action=open, ok=True, locked=[False]
sleep (1,) {}
SLEEP 1.0
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11566063526924346}"
set_resource () {'name': 'CO2PumpTimeFlag', 'value': 30}
Set CO2PumpTimeFlag 30 ===>> OK
release ('JanCO2Flag',) {}
release JanCO2Flag
Set JanCO2Flag 0 ===>> OK
executed snippet estimated_duration=6.0, duration=6.23418688774
PumpMicrobone.py completed successfully
gosub finished
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 0
Get Resource Value JanMiniboneFlag=0.0
get resource value 0.0
get_resource_value () {'name': 'JanMiniboneFlag'}
Read JanMiniboneFlag ===>> 0
Get Resource Value JanMiniboneFlag=0.0
executed snippet estimated_duration=4.0, duration=6.24688220024
jan_pump_extraction_line.py completed successfully
Post Equilibration Finished
20:06:11 -- ******* Post Equilibration Finished *******
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11566063526924346}"
set states for children of Y. state=False
handle state [('Y', False)]
update switch state Y False args=() kw={'refresh': False} ncanvase=6
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11566063526924346}"
set states for children of V. state=False
handle state [('V', False)]
update switch state V False args=() kw={'refresh': False} ncanvase=6
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11566063526924346}"
set states for children of H. state=True
handle state [('H', True)]
update switch state H True args=() kw={'refresh': False} ncanvase=6
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11566063526924346}"
20:06:31 -- collecting point 25
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11566063526924346}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11566063526924346}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11566063526924346}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11566063526924346}"
set states for children of H. state=False
handle state [('H', False)]
update switch state H False args=() kw={'refresh': False} ncanvase=6
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11566063526924346}"
20:06:57 -- collecting point 50
set states for children of C. state=True
set states for children of B. state=True
handle state [('C', True), ('B', True)]
update switch state C True args=() kw={'refresh': True} ncanvase=6
update switch state B True args=() kw={'refresh': False} ncanvase=6
refresh_canvas_needed fired
set states for children of D. state=True
handle state [('D', True)]
update switch state D True args=() kw={'refresh': False} ncanvase=6
refresh_canvas_needed fired
State checksums do not match. Local:1269278284 Remote:1695186306
State checksum failed
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11566063526924346}"
set states for children of I. state=False
set states for children of Q. state=True
set states for children of P. state=True
handle state [('I', False), ('Q', True), ('P', True)]
update switch state I False args=() kw={'refresh': True} ncanvase=6
update switch state Q True args=() kw={'refresh': True} ncanvase=6
update switch state P True args=() kw={'refresh': False} ncanvase=6
refresh_canvas_needed fired
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11566063526924346}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11566063526924346}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11566063526924346}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11566063526924346}"
20:07:24 -- collecting point 75
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11566063526924346}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11566063526924346}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11566063526924346}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11566063526924346}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11566063526924346}"
20:07:50 -- collecting point 100
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11566063526924346}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11566063526924346}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11566063526924346}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.11566063526924346}"
waiting for write to finish
measurement finished
estimated time: 125.829 actual time: :126.187
flush and close file /Users/jan/PychronDev/data/isotopes/25/52da3b-4ad9-4f5b-bc43-294f68c13807.h5
baselines () {'settling_time': 15.0, 'detector': 'H1', 'mass': 34.2, 'ncounts': 60}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Baseline
build tables- baseline [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2), Detector(CDD)]
add group baseline table H2
add group baseline table H1
add group baseline table AX
add group baseline table L1
add group baseline table L2
add group baseline table CDD
flush and close file /Users/jan/PychronDev/data/isotopes/25/52da3b-4ad9-4f5b-bc43-294f68c13807.h5
detector Detector(H1)
POSITION 34.2 H1
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [-0.00063987  0.15840543  0.57026999]
H1 map mass to dac 34.2 >> 5.23931599104
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4500
positioning 34.2 (5.23931599104) on H1
setting magnet DAC
current  : 5.878660
requested: 5.239316
Delta Dac: 0.639344
Checking detector protection. dv=0.63934
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.23931599104 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
set_dac. change=True
Delaying 15.0s for detectors to settle
Join finished
measuring baseline. ncounts=60
"baseline" increment series count="2" fit count="1" regressing="True"
starting measurement
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.15998368132945662}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.14529989224854176}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13372845518383478}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13780441758025747}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13513442813573598}"
20:08:56 -- collecting point 25
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.13731533281918493}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.128575073318797}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12473311203622828}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12594738348811918}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1269053102866562}"
20:09:22 -- collecting point 50
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.12836405259825442}"
testing H1<-5.0
evaluate ot="H1.bs<-5.0" t="H1<-5.0", ctx="{'H1': 0.1270130554772197}"
waiting for write to finish
measurement finished
estimated time: 62.915 actual time: :63.111
flush and close file /Users/jan/PychronDev/data/isotopes/25/52da3b-4ad9-4f5b-bc43-294f68c13807.h5
activate_detectors ('H1', 'AX', 'CDD') {'peak_center': True}
peak_center () {'detector': 'H1', 'integration_time': 0.262144, 'isotope': 'Ar40'}
peak center: mean=85.3668102882 threshold=3
peak center started
setup peak center. detector=['H1', 'AX', 'CDD'], isotope=Ar40
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x1522fce90>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x129b53b90>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x1522fce90>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x129b53b90>]
VersionedUnpickler [<apptools.sweet_pickle.versioned_unpickler.VersionedUnpickler object at 0x1505f2170>] using Updater [<apptools.sweet_pickle.updater.Updater object at 0x129b53b90>]
Mapping mass to dac mass func: "parabolic"
H1 map mass coeffs = [-0.00063987  0.15840543  0.57026999]
H1 map mass to dac 39.9624 >> 5.87866
GetDeflection H1 ===>> 0
GetHighVoltage ===>> 4500
do peak center. <pychron.spectrometer.jobs.peak_center.PeakCenter object at 0x129b53e30>
doing pc
starting peak center. center dac= 5.87866 step_width=0.0015
width = 0.0015
get scan parameters. half-width=0.015,window=0.015, i=0, scalar=1
Scan parameters center=5.87866 width=0.03000 (5.86366 - 5.89366)
Moving to starting dac 5.86366
setting magnet DAC
current  : 5.239316
requested: 5.863660
Delta Dac: 0.624344
Checking detector protection. dv=0.62434
Checking detector "CDD". Protection Threshold: 0.5 (V)
ProtectDetector CDD,On ===>> OK
GetDeflection CDD ===>> 2000
Protected = 2000
SetMagnetDAC 5.86366 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
Wait for magnet to stop moving
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> True
GetMagnetMoving ===>> False
Magnet move complete
Unprotect detectors
ProtectDetector CDD,Off ===>> OK
GetDeflection CDD ===>> 50
set_dac. change=True
Wait until signal near baseline. tol= 0.0941995701585. timeout= 10
Peak center failed to move to a baseline position
_do_sweep sm= 5.86366, em= 5.89366, stm= 0.0015
calculated step values: start=5.86366, end=5.89366, width=0.0015, nsteps=21.0
setting magnet DAC
current  : 5.863660
requested: 5.863660
Delta Dac: 0.000000
Checking detector protection. dv=0.00000
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86366 ===>> OK
set_dac. change=False
setting magnet DAC
current  : 5.863660
requested: 5.865239
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86523894737 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.865239
requested: 5.866818
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86681789474 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.866818
requested: 5.868397
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86839684211 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.868397
requested: 5.869976
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.86997578947 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.869976
requested: 5.871555
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87155473684 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.871555
requested: 5.873134
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87313368421 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.873134
requested: 5.874713
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87471263158 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.874713
requested: 5.876292
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87629157895 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.876292
requested: 5.877871
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87787052632 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.877871
requested: 5.879449
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87944947368 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.879449
requested: 5.881028
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88102842105 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.881028
requested: 5.882607
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88260736842 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.882607
requested: 5.884186
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88418631579 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.884186
requested: 5.885765
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88576526316 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.885765
requested: 5.887344
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88734421053 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.887344
requested: 5.888923
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.88892315789 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.888923
requested: 5.890502
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89050210526 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.890502
requested: 5.892081
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89208105263 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
setting magnet DAC
current  : 5.892081
requested: 5.893660
Delta Dac: 0.001579
Checking detector protection. dv=0.00158
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.89366 ===>> OK
Magnet settling time: 2.097 0.500
Magnet settling complete
set_dac. change=True
result of _do_sweep=True
result of _calculate_peak_center=([5.8712652104208418, 5.8787501803607221, 5.8862351503006014], [62.374703438500219, 84.4387299536575, 61.653950813138152], 5.8794716232464932, 84.4387299536575)
Failed to find a valid peak. No peak greater than 1.0. max = 0.256124938
new center pos Detector(H1) (Ar40) @ 5.87875018036
GetHighVoltage ===>> 4500
GetDeflection H1 ===>> 0
dac uncorrected for HV and deflection 5.87875018036
update mftable H1 Ar40 5.87875018036 message=automated run peakcenter
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
get initial guess parabolic
dump mftable to /Users/jan/PychronDev/setupfiles/spectrometer/mftables/mftable.csv
add to repo msg=modified - automated run peakcenter
sweep finished
locally archiving mftable
setting magnet DAC
current  : 5.893660
requested: 5.878750
Delta Dac: 0.014910
Checking detector protection. dv=0.01491
Checking detector "CDD". Protection Threshold: 0.5 (V)
SetMagnetDAC 5.87875018036 ===>> OK
Magnet settling time: 0.500 0.500
Magnet settling complete
set_dac. change=True
Failed to find a valid peak. No peak greater than 1.0. max = 0.256124938
flush and close file /Users/jan/PychronDev/data/isotopes/25/52da3b-4ad9-4f5b-bc43-294f68c13807.h5
finished measure script
executed snippet estimated_duration=226.132928, duration=281.464639187
jan_unknown120_60.py completed successfully
Measurement Finished
20:10:30 -- ******* Measurement Finished *******
Post Measurement Started jan_pump_ms.py
20:10:30 -- ******* Post Measurement Started jan_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.59876251221e-05
Pumping spectrometer
open () {'name': 'O'}
open name=O desc=---
checking ownership. requestor=129.138.12.150
check software interlocks O
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open O ===>> OK
GetIndicatorState O ===>> OK
change switch state (True, True)
update switch state O True args=() kw={} ncanvase=6
20:10:30 -- OPEN   VALVE-O (Jan Ion Pump)
-------------------------- open O () result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.360747814178
jan_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
20:10:30 -- ******* Post Measurement Finished *******
$$$$$$$$$$$$$$$$$$$$ state at run end measurement
state changed from measurement to success
post measurement save measured=True aborted=False
Set filtering
setting fod for Ar41= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar40= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar36= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for CDD= {'filter_outliers': True, 'std_devs': 10, 'iterations': 1}
setting fod for Ar37= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar38= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for L1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar39= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for AX= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
persistence save...
persistence save - db
post measurement save
5210156880 connecting to database sqlite:////Users/jan/PychronDev/.appdata/local_lab.db
connected to db sqlite:////Users/jan/PychronDev/.appdata/local_lab.db
create new session 5210156880
close session 5210156880
No database instance. Not saving post measurement to isotopedb database
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
massspec enabled True
create new session 5027452304
MassSpec Database Version: 16.0
close session 5027452304
saving post measurement to secondary database
saving to massspec database 129.138.12.160/massspecdata
setting labnumber to 65626
setting aliquot to 4
setting step to F
setting uuid to 2552da3b-4ad9-4f5b-bc43-294f68c13807
setting irradpos to 65626
setting extract_device to Fusions CO2
setting tray to 
setting position to 176
setting power_requested to 0.85
setting extract_value to 0.85
setting duration to 30.0
setting duration_at_request to 30.0
setting first_stage_delay to 30.0
setting cleanup to 30.0
setting comment to C23: adularia
setting irradiation to NM-290
setting level to C
setting irradiation_level to C
setting sample to 16-DJ-52
setting material to Adularia
setting project to IR1005
setting mass_spectrometer to Jan
no attribute chron_dosages
no attribute production_ratios
no attribute interference_corrections
no attribute production_name
no attribute j
Reference Isotope=Ar40
Reference Detector=H1
%%%%%%%%%%%%%%%%%%%% Comment: C23: adularia %%%%%%%%%%%%%%%%%%%
adding isotope Ar41 H2
add baseline dbdet= Ar41. original det= H2
get baseline data Ar41 H2
Get data baseline <pychron.processing.isotope.Baseline object at 0x14c1ad110> len t=60
baseline Ar41. v=-0.211267912489, e=0.00701154234639
get signal data Ar41 H2
Get data signal Ar41 0.033+/-0.005 len t=120
adding isotope Ar40 H1
add baseline dbdet= Ar40. original det= H1
get baseline data Ar40 H1
Get data baseline <pychron.processing.isotope.Baseline object at 0x14c1ad250> len t=60
baseline Ar40. v=0.127398887882, e=0.005687808954
get signal data Ar40 H1
Get data signal Ar40 85.493+/-0.018 len t=120
adding isotope Ar39 AX
add baseline dbdet= Ar39. original det= AX
get baseline data Ar39 AX
Get data baseline <pychron.processing.isotope.Baseline object at 0x149060f90> len t=60
baseline Ar39. v=-0.0670445136345, e=0.00682752452804
get signal data Ar39 AX
Get data signal Ar39 1.594+/-0.012 len t=120
adding isotope Ar38 L1
add baseline dbdet= Ar38. original det= L1
get baseline data Ar38 L1
Get data baseline <pychron.processing.isotope.Baseline object at 0x149060c90> len t=60
baseline Ar38. v=-0.0260047021519, e=0.00279232507707
get signal data Ar38 L1
Get data signal Ar38 0.081+/-0.005 len t=120
adding isotope Ar37 L2
add baseline dbdet= Ar37. original det= L2
get baseline data Ar37 L2
Get data baseline <pychron.processing.isotope.Baseline object at 0x149060390> len t=60
baseline Ar37. v=-0.0164258598472, e=0.00676932050117
get signal data Ar37 L2
Get data signal Ar37 3.103+/-0.011 len t=120
adding isotope Ar36 CDD
add baseline dbdet= Ar36. original det= CDD
get baseline data Ar36 CDD
Get data baseline <pychron.processing.isotope.Baseline object at 0x149060850> len t=60
baseline Ar36. v=3.5146168813e-05, e=9.71740005416e-06
get signal data Ar36 CDD
Get data signal Ar36 0.2743+/-0.0012 len t=120
65626-04F added analysis time 1.20383787155s
analysis added to mass spec database
mass spec save time= 1.213
persistence save - dvc
================= post measurement started
create new session 4949116112
close session 4949116112
---------------- Experiment Queue saving disabled
DVC saving peakcenter
Failed to find a valid peak. No peak greater than 1.0. max = 0.256124938
Smart pull ahead: 0 behind: 0
Up-to-date with origin
add to repo msg=modified - ad8224ebc6dbfeb9f5997218dfa5fe690569839d.json
add to repo msg=modified - 26-04F.json
add to repo msg=modified - 26-04F.dat.json
add to repo msg=modified - 26-04F.blan.json
add to repo msg=modified - 26-04F.inte.json
add to repo msg=modified - 26-04F.icfa.json
add to repo msg=modified - 26-04F.base.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/Irradiation-NM-290/656/tags/26-04F.tags.json
add to repo msg=modified - 26-04F.peak.json
add to repo msg=modified - 26-04F.extr.json
not at valid file /Users/jan/PychronDev/data/.dvc/repositories/Irradiation-NM-290/656/monitor/26-04F.moni.json
commit message=<COLLECTION>
add to repo msg=modified - 26-04F.inte.json
add to repo msg=modified - 26-04F.base.json
commit message=<ISOEVO> default collection fits
add to repo msg=modified - 26-04F.blan.json
commit message=<BLANKS> preceding bc-02-J-563
add to repo msg=modified - 26-04F.icfa.json
commit message=<ICFactor> default
push repository <pychron.git_archive.repo_manager.GitRepoManager object at 0x14a268bf0>
pushing to remote=origin, url=https://github.com
no changes to meta repo
create new session 4949116112
add association Irradiation-NM-290
get identifier "65626"
setting analysis irradiation position=<pychron.dvc.dvc_orm.IrradiationPositionTbl object at 0x1554a4ed0>
close session 4949116112
================= post measurement finished
20:10:43 -- ******* Post Run Check *******
loading queue conditionals post_run_actions
loading system conditionals post_run_actions
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
loading queue conditionals post_run_terminations
loading system conditionals post_run_terminations
loading conditionals from /Users/jan/PychronDev/setupfiles/spectrometer/default_conditionals.yaml
Checking default post run terminations n=1
GetDeflection CDD ===>> 50
testing CDD==2000
evaluate ot="CDD.deflection==2000" t="CDD==2000", ctx="{'CDD': 50.0}"
20:10:43 -- ******* Post Run Check Passed *******
20:10:43 -- Automated run 65626-04F success duration: 374.623 s
----------------- finish -----------------
----------------- stop -----------------
retroactive repository identifiers disabled
finish run. runs completed=1
update duration runid=65626-04F, duration=374.623193979, md5=301e91d8
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=213.652928, duration=0.000221967697144
script duration name:unknown120_60 seconds:214.0
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.98023223877e-05
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=4.91142272949e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000113010406494
executed snippet estimated_duration=0.0, duration=0.00423383712769
script duration name:co2 seconds:0.0
loading script "jan_unknown120_60.py"
loading script "jan_pump_ms.py"
loading script "jan_co2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000182867050171
executed snippet estimated_duration=4.0, duration=0.00168013572693
Script duration 214.0
Run total estimated duration= 215.000
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
executed snippet estimated_duration=556.052928, duration=0.000304937362671
script duration name:unknown400_120 seconds:556.0
pump_ms in script context. using previous estimated duration
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_sniffair_x2.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=5.31673431396e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.000152111053467
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000105857849121
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000217914581299
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=6.38961791992e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=9.70363616943e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.00011420249939
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000110864639282
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=36.0, duration=0.000140905380249
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=70.0, duration=0.00011682510376
executed snippet estimated_duration=250.0, duration=0.0336570739746
script duration name:sniffair_x2 seconds:250.0
pump_extraction_line in script context. using previous estimated duration
Script duration 806.0
Run total estimated duration= 807.000
unknown400_120 in script context. using previous estimated duration
script duration name:unknown400_120 seconds:556.0
sniffair_x2 in script context. using previous estimated duration
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown400_120 seconds:556.0
co2 in script context. using previous estimated duration
script duration name:co2 seconds:0.0
Script duration 556.0
Run total estimated duration= 557.000
script duration name:unknown400_120 seconds:556.0
loading script "jan_unknown400_120.py"
loading script "jan_pump_ms.py"
loading script "jan_cocktail_x1.py"
loading script "jan_pump_extraction_line.py"
testing...
no interpolation path defined
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=9.91821289062e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=0.0001220703125
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=32.0, duration=0.000102043151855
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000113010406494
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=6.50882720947e-05
calculate duration
testing...
no interpolation path defined
executed snippet estimated_duration=38.0, duration=0.000123023986816
executed snippet estimated_duration=108.0, duration=0.0165848731995
script duration name:cocktail_x1 seconds:108.0
Script duration 664.0
Run total estimated duration= 665.000
script duration name:unknown400_120 seconds:556.0
script duration name:sniffair_x2 seconds:250.0
Script duration 806.0
Run total estimated duration= 807.000
script duration name:unknown400_120 seconds:556.0
cocktail_x1 in script context. using previous estimated duration
script duration name:cocktail_x1 seconds:108.0
Script duration 664.0
Run total estimated duration= 665.000
script duration name:unknown400_120 seconds:556.0
script duration name:cocktail_x1 seconds:108.0
Script duration 664.0
Run total estimated duration= 665.000
script duration name:unknown400_120 seconds:556.0
script duration name:cocktail_x1 seconds:108.0
Script duration 664.0
Run total estimated duration= 665.000
nruns=9 before=5.0, run_dur=5853.0, btw=360.0
write rem/ex queues
/Users/jan/PychronDev/experiments/rem/CurrentExperiment.rem.txt
/Users/jan/PychronDev/experiments/rem/CurrentExperiment.ex.txt
doing event level: 3
